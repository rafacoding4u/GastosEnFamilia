<?php
require_once 'app/libs/bSeguridad.php';
require_once 'app/libs/bGeneral.php';
require_once 'app/modelo/classModelo.php';

class AuthController
{
    // Definir constantes para niveles de usuario
    const NIVEL_SUPERADMIN = 'superadmin';
    const NIVEL_ADMIN = 'admin';
    const NIVEL_USUARIO = 'usuario';

    public function home()
    {
        try {
            if (isset($_SESSION['usuario']) && $_SESSION['usuario']['nivel_usuario'] > 0) {
                header("Location: index.php?ctl=inicio");
                exit();
            }

            $params = [
                'mensaje' => 'Bienvenido a GastosEnFamilia',
                'mensaje2' => 'Gestiona tus finanzas familiares de manera eficiente',
                'fecha' => date('d-m-Y')
            ];

            $this->render('home.php', $params);
        } catch (Exception $e) {
            error_log("Error en home(): " . $e->getMessage());
            header('Location: index.php?ctl=error');
        }
    }

    public function inicio()
    {
        try {
            if (!isset($_SESSION['usuario']) || !isset($_SESSION['usuario']['nivel_usuario']) || $_SESSION['usuario']['nivel_usuario'] == 'registro') {
                header('Location: index.php?ctl=iniciarSesion');
                exit();
            }

            $m = new GastosModelo();
            $idUser = $_SESSION['usuario']['id'] ?? null;

            $params = [
                'mensaje' => isset($_SESSION['usuario']['nombre']) ? 'Bienvenido, ' . $_SESSION['usuario']['nombre'] : 'Bienvenido',
                'nivel_usuario' => $_SESSION['usuario']['nivel_usuario'],
                'fecha' => date('d-m-Y')
            ];

            if ($_SESSION['usuario']['nivel_usuario'] === self::NIVEL_SUPERADMIN) {
                $params['finanzasGlobales'] = $m->obtenerSituacionGlobal();
            } elseif ($_SESSION['usuario']['nivel_usuario'] === self::NIVEL_ADMIN) {
                $params['finanzasFamilias'] = $m->obtenerFamiliasPorAdministrador($idUser);
                $params['finanzasGrupos'] = $m->obtenerGruposPorAdministrador($idUser);
            } else {
                $params['finanzasPersonales'] = $m->obtenerSituacionFinanciera($idUser);
            }

            $this->render('inicio.php', $params);
        } catch (Exception $e) {
            error_log("Error en inicio(): " . $e->getMessage());
            header('Location: index.php?ctl=home');
            exit();
        }
    }

    public function iniciarSesion()
    {
        $params = [
            'alias' => '',
            'contrasenya' => ''
        ];

        if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['bIniciarSesion'])) {
            try {
                if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
                    throw new Exception('CSRF token inválido.');
                }

                $alias = htmlspecialchars(recoge('alias'), ENT_QUOTES, 'UTF-8');
                $contrasenya = htmlspecialchars(recoge('contrasenya'), ENT_QUOTES, 'UTF-8');

                $m = new GastosModelo();
                $usuario = $m->consultarUsuario($alias);

                if (!$usuario) {
                    $params['mensaje'] = 'Alias incorrecto.';
                    error_log("Intento fallido de inicio de sesión para el alias {$alias}: usuario no encontrado.");
                    $this->registrarAcceso(null, 'acceso_denegado');
                } else {
                    if (comprobarhash($contrasenya, $usuario['contrasenya'])) {
                        session_regenerate_id(true);

                        // Almacenar el nivel de usuario directamente y en el array usuario
                        $_SESSION['nivel_usuario'] = $usuario['nivel_usuario'];
                        $_SESSION['usuario'] = [
                            'id' => $usuario['idUser'],
                            'nombre' => $usuario['nombre'],
                            'nivel_usuario' => $usuario['nivel_usuario'],
                            'email' => $usuario['email'],
                            'idFamilia' => $usuario['idFamilia'] ?? null,
                            'idGrupo' => $usuario['idGrupo'] ?? null
                        ];

                        // Verificar que la sesión contiene el nivel de usuario esperado
                        if (!isset($_SESSION['usuario']['nivel_usuario']) || empty($_SESSION['usuario']['nivel_usuario'])) {
                            // Si falta el nivel de usuario, redirige al inicio de sesión con un mensaje de error
                            $_SESSION['mensaje_error'] = 'Error de sesión. Por favor, inicie sesión de nuevo.';
                            header('Location: index.php?ctl=iniciarSesion');
                            exit();
                        }


                        $this->registrarAcceso($usuario['idUser'], 'login');

                        header('Location: index.php?ctl=inicio');
                        exit();
                    } else {
                        $params['mensaje'] = 'Usuario o contraseña incorrectos.';
                        error_log("Intento fallido de inicio de sesión para el alias {$alias}: contraseña incorrecta.");
                        $this->registrarAcceso(null, 'acceso_denegado');
                    }
                }
            } catch (Exception $e) {
                error_log("Error en iniciarSesion(): " . $e->getMessage());
                $params['mensaje'] = 'Error al iniciar sesión. Inténtelo de nuevo.';
            }
        }

        if (empty($_SESSION['csrf_token'])) {
            $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
        }
        $params['csrf_token'] = $_SESSION['csrf_token'];

        $this->render('formIniciarSesion.php', $params);
    }

    public function salir()
    {
        try {
            if (session_status() === PHP_SESSION_ACTIVE && isset($_SESSION['usuario'])) {
                $this->registrarAcceso($_SESSION['usuario']['id'], 'logout');
                session_unset();
                session_destroy();
                error_log("Sesión cerrada exitosamente.");
            }
        } catch (Exception $e) {
            error_log("Error al cerrar la sesión: " . $e->getMessage());
        }

        header("Location: index.php?ctl=home");
        exit();
    }

    public function error()
    {
        try {
            $params = [
                'mensaje' => 'Ha ocurrido un error. Por favor, intenta de nuevo más tarde.'
            ];
            $this->render('error.php', $params);
        } catch (Exception $e) {
            error_log("Error en el manejo de errores: " . $e->getMessage());
            echo 'Ocurrió un problema grave. Intente más tarde.';
        }
    }

    private function render($vista, $params = [])
    {
        try {
            extract($params);
            ob_start();
            require __DIR__ . '/../../web/templates/' . $vista;
            $contenido = ob_get_clean();
            require __DIR__ . '/../../web/templates/layout.php';
        } catch (Exception $e) {
            error_log("Error en render(): " . $e->getMessage());
            header('Location: index.php?ctl=error');
        }
    }

    private function registrarAcceso($idUser, $accion)
    {
        $m = new GastosModelo();
        if ($idUser === null) {
            $idUser = 'NULL';
        }

        $m->registrarAcceso($idUser, $accion);
    }
}
